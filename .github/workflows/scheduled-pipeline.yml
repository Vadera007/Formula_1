name: F1 Predictor Pipeline

on:
  schedule:
    # Runs every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

jobs:
  build-and-update:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          # We need to fetch all history for Git LFS
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' # Use a specific Python version

      - name: Install Git LFS
        run: |
          curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
          sudo apt-get install git-lfs
          git lfs install

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run the update pipeline
        run: python run_pipeline.py

      # --- NEW: Commit and Push Changes ---
      - name: Commit and push updated data and models
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          git pull # Pull the latest changes to avoid conflicts
          git add -A # Stage all changes (new database and models)
          # Only commit if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "Automated data and model update"
            git push
          else
            echo "No changes to commit."
          fi








# name: F1 Predictor Pipeline

# on:
#   schedule:
#     # This workflow will run every 6 hours every day
#     - cron: '0 */6 * * *'
#   workflow_dispatch:

# jobs:
#   run-pipeline:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.11'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
      
#       - name: Run data collection and model training
#         run: python main.py